/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package graphicsEditor;

import static graphicsEditor.CanvasPanel.getScreenComponent;
import graphicsEditor.drawnShapes.DrawnRectangle;
import graphicsEditor.instruments.Tool;
import java.awt.Color;
import java.awt.Dimension;
import javax.swing.JFrame;
import javax.swing.JScrollPane;

/**
 *
 * @author VADIM
 */
public class ScrollSidePanel extends javax.swing.JPanel {

    GEFrame frame;

    /**
     * Creates new form ScrollSidePanel
     */
    public ScrollSidePanel(GEFrame frame) {
        initComponents();
        setBackground(new Color(150, 200, 225));
        this.frame = frame;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        slider = new javax.swing.JSlider();

        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                formMouseClicked(evt);
            }
        });

        slider.setMajorTickSpacing(30);
        slider.setMaximum(400);
        slider.setMinimum(100);
        slider.setMinorTickSpacing(30);
        slider.setOrientation(javax.swing.JSlider.VERTICAL);
        slider.setPaintLabels(true);
        slider.setPaintTicks(true);
        slider.setPreferredSize(new java.awt.Dimension(80, 450));
        slider.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                sliderStateChanged(evt);
            }
        });
        slider.addMouseWheelListener(new java.awt.event.MouseWheelListener() {
            public void mouseWheelMoved(java.awt.event.MouseWheelEvent evt) {
                sliderMouseWheelMoved(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 200, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(slider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 700, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(slider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void formMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseClicked
        if (frame.getCanvas().getTool() == Tool.PIPETTE) {
            Color color = new Color(getScreenComponent(this).getRGB(evt.getX(), evt.getY()));
            switch (frame.getCanvas().getPipetteChoice()) {
                case CanvasPanel.BRUSH_COLOR: {
                    frame.getCanvas().setBrushColor(color);
                    break;
                }
                case CanvasPanel.FILL_COLOR: {
                    frame.getCanvas().setFillColor(color);
                    break;
                }
                case CanvasPanel.BACKGROUND_COLOR: {
                    DrawnRectangle background = new DrawnRectangle(frame.getCanvas().getStroke(), color, color, 0, 0, CanvasPanel.WIDTH, CanvasPanel.HEIGHT);
                    frame.getCanvas().setBackgroundRectangle(background);
                    break;
                }
            }
        }
    }//GEN-LAST:event_formMouseClicked

    private void sliderStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_sliderStateChanged
        frame.getCanvas().setScale(slider.getValue() / 100f);
        System.out.println(frame.getCanvas().getPreferredSize().toString());
        Dimension dim = new Dimension((int) (CanvasPanel.PREFERRED_WIDTH * frame.getCanvas().getScale()), (int) (CanvasPanel.PREFERRED_HEIGHT * frame.getCanvas().getScale()));
        frame.getCanvas().setPreferredSize(dim);
        frame.getCanvas().repaint();
        frame.getCanvas().revalidate();
    }//GEN-LAST:event_sliderStateChanged

    private void sliderMouseWheelMoved(java.awt.event.MouseWheelEvent evt) {//GEN-FIRST:event_sliderMouseWheelMoved
        slider.setValue(slider.getValue() + (int) evt.getPreciseWheelRotation());
    }//GEN-LAST:event_sliderMouseWheelMoved


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JSlider slider;
    // End of variables declaration//GEN-END:variables
}
